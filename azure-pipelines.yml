# SQL Replication Build Pipeline
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

# Use CI, run the pipeline on each commit to the master branch
#trigger:
#- master

# Opt out of CI, run the pipeline manually
trigger: none

jobs:
- job: SQLReplicationBuild
  timeoutInMinutes: 10

  pool:
   name: 'CodeGen Pool'
   demands:
    - SDE32
    - SDE64
    - SDI
    - WIX

  variables:
  - group: Secure
  - name: solution
    value: 'SqlReplication.sln'
  - name: currentVersion
    value: '1.2.0'
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Deploy'
  - name: agent.retainDefaultEncoding
    value: true

  steps:
  - task: NuGetToolInstaller@1
    displayName: 'Get NuGet tool'

  - task: NuGetCommand@2
    displayName: 'Restore NuGet packages'
    inputs:
      restoreSolution: '$(solution)'

  - task: BatchScript@1
    displayName: 'Configure SDE environment'
    inputs:
      filename: '$(SYNERGYDE32)\dbl\dblvars32.bat'
      arguments: 
      modifyEnvironment: true

  - task: VSBuild@1
    displayName: 'Build SQL Replication solution and installer'
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      vsVersion: 17.0

#  - task: VSTest@2
#    displayName: 'Run unit tests'
#    inputs:
#      platform: '$(buildPlatform)'
#      configuration: '$(buildConfiguration)'
#
  - task: DownloadSecureFile@1
    displayName: 'Doanload AuthentiCode certificate'
    name: cert
    inputs:
      secureFile: dbd7ae8f-724a-49a3-a66a-662e9d6fe82b

  - task: CmdLine@2
    displayName: 'Sign MSI file'
    inputs:
      script: '"C:\Program Files (x86)\Windows Kits\10\bin\x86\signtool.exe" sign /v /td sha256 /tr http://timestamp.digicert.com /fd sha256 /f $(cert.secureFilePath) /p "$(SigPass)" /d "SQL Replication FileService" /du "www.synergex.com" FileService\bin\release\FileService.exe'

  - task: PublishBuildArtifacts@1
    displayName: 'Save MSI file as artifact'
    inputs:
      pathToPublish: 'FileService\bin\release\FileService.exe' 
      artifactName: 'FileService-Installer' 
      #publishLocation: 'Container' # Options: container, filePath
      #targetPath: # Required when publishLocation == FilePath
      #parallel: false # Optional
      #parallelCount: # Optional
      #fileCopyOptions: #Optional
