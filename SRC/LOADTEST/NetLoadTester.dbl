;*****************************************************************************
;
; File:         NetLoadTester.dbl
;
; Type:         Console application
;
; Description:  Performs random I/O to one or more data files and causes work
;               to be added to the replication queue.
;
;*****************************************************************************
;
; Copyright (c) 2024, Synergex International, Inc.
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;
; * Redistributions of source code must retain the above copyright notice,
;   this list of conditions and the following disclaimer.
;
; * Redistributions in binary form must reproduce the above copyright notice,
;   this list of conditions and the following disclaimer in the documentation
;   and/or other materials provided with the distribution.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
;
;*****************************************************************************

import NetLoadTester
import System
import System.Threading
import System.Threading.Tasks

main NetLoadTester

proc
    ;Number of threads to create per worker type

    ;NOTE: Do not set this to higher than 1 right now because code in xcall replicate,
    ;IOHooksIsam and likely others is not currently thread safe.
    data threadsPerWorker = 1
    data secondsToRun = 1
    data queueMode = String.Empty

    repeat
    begin
        Console.Write("Queue mode (I)SAM or (K)afka [I]: ")
        queueMode = Console.ReadKey().KeyChar.ToString().ToUpper()
        using queueMode select
        ("I","K"),
            exitloop
        (),
            nextloop
        endusing
    end

    data testManager = new LoadTestManager(queueMode,threadsPerWorker,secondsToRun)
    testManager.StartTests().Wait()

    Console.WriteLine("All threads have finished their work. Press a key.")
    Console.ReadKey()
    Console.WriteLine()

endmain

