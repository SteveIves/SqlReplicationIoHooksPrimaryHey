;;*****************************************************************************
;;
;; File:        ThrowOnSqlClientError.dbl
;;
;; Description: Throw a DatabaseCommunicationException when one of a set of
;;              recognized exceptions is en countered. This will in turn cause
;;              replicator to initiate re-connect processing.
;;
;; Author:      Steve Ives (Synergex Professional Services Group)
;;
;;*****************************************************************************
;;
;; Copyright (c) 2024, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import ReplicationLibrary

;;; <summary>
;;; This routine should be called after a SqlClient exception has been encountered.
;;; It looks for specific errors that indicate the SQL Server is no longer accessible
;;; for some reason, and in those cases throws a DatabaseCommunicationException.
;;; The replicator process has specific code that traps this exception and causes it
;;; to attempt to disconnect and reconnect to the database. If the database error is
;;; anything other than the specific errors processed by this routine then the error
;;; will continue to "bubble up" back into the replicator code, and will cause an error
;;; message to be logged. Replicator will then either ignore the error and continue,
;;; or terminate processing, based on its configuration settings.
;;; </summary>
;;; <param name="ex">Exception caught during database operation</param>
;;; <param name="errtxt">Error message from code</param>
subroutine ThrowOnSqlClientError
    required in errorMessage, string
    required in ex, @Exception
proc

    ;TODO: * * * FIGURE OUT WHAT TO DO HERE * * *

    xreturn

endsubroutine
