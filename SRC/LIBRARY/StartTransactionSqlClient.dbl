import System.Data.SqlClient
;;*****************************************************************************
;;
;; File:        StartTransactionSqlClient.dbl
;;
;; Description: Starts a database transaction (SqlClient mode)
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;
;;*****************************************************************************
;;
;; Copyright (c) 2024, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

.ifdef DBLNET

import ReplicationLibrary
import System.Data.SqlClient

function StartTransactionSqlClient, boolean
    required out transaction, boolean
    required out errorMessage, string
proc
    try
    begin
        disposable data command = new SqlCommand("START TRANSACTION",Settings.DatabaseConnection) { 
        &    CommandTimeout = Settings.DatabaseTimeout
        &    }
        command.ExecuteNonQuery()
        transaction = true
        errorMessage = ""
    end
    catch (ex, @SqlException)
    begin
        errorMessage = "Failed to start transaction. Error was: " + ex.Message
        xcall ThrowOnSqlClientError(errorMessage,ex)
        transaction = false
    end
    endtry
    freturn transaction
endfunction

.endc
