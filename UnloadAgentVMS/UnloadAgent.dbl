
;;; <summary>
;;; The main entry point for the application.
;;; </summary>
main UNLOAD_AGENT
    record
        ok, boolean
        consumer, i4
        publisher, i4
        messageKey, string
        messageValue, string

        ;TODO: These need to come from configuration
        servers, string
        consumerTopic, string
        publisherTopic, string
        exportDirectory, string
        zipFileDirectory, string
    endrecord

    external function
        KafkaConnectConsumer, boolean
        KafkaConsume, boolean
        KafkaConnectPublisher, boolean
        KafkaPublish, boolean
endexternal
proc
    ok = true
    
    ;TODO: Load configuration
    servers = ""
    consumerTopic = "UnloadRequest"
    publisherTopic = "UnloadResponse"
    exportDirectory = "UNLOAD_EXPORT:"
    zipFileDirectory = "UNLOAD_ZIP:"

    ;TODO: Set environment variables

    if (ok)
    begin
        
    end

    ;Become a consumer of the Kafka topic used for inbound messages

    if (ok)
    begin
        Console.WriteLine("Connecting consumer...")
        if (!%KafkaConnectConsumer((a)servers,(a)consumerTopic,consumer))
        begin
            ok = false
            Console.WriteLine("ERROR: Failed to connect consumer!")
        end
    end

    ;Become a publisher to the Kafka topic used for outbound messages

    if (ok)
    begin
        Console.WriteLine("Connecting publisher...")
        if (!%KafkaConnectPublisher((a)servers,(a)publisherTopic,publisher))
        begin
            ok = false
            Console.WriteLine("ERROR: Failed to connect publisher!")
        end
    end

    ;Listen for "unload file" messages on the inbound topic

    ;Messages have an (optional) key and a value
    ;We will respond to:
    ;Key    Valaue      Action
    ;------ ------      ------
    ;EXIT   n/a         Stop processing and exit
    ;UNLOAD <filespec>  Export and upload a file

    if (ok)
    begin
        repeat
        begin
            data tmpkey, a128
            data tmpvalue, a1024

            if (%KafkaConsume(consumer,tmpkey,tmpvalue)) then
            begin
                ;Keys are optional, but we require one, so ignore any message that does not have one
                if (!tmpkey)
                    nextloop

                messageKey = %atrimtostring(tmpkey)
                messageValue = %atrimtostring(tmpvalue)

                using messageKey select

                ("EXIT"),
                begin
                    Console.WriteLine("Shutdown instruction received!")
                    exitloop
                end

                ("UNLOAD"),
                begin
                    data errorMessage, string, ""
                    data fileSpec, string, messageValue
                    data fileName, string
                    data fileExt, string
                    data exportFile, string
                    data exportFileSpec, string
                    data zipName, string 
                    data zipSpec, string
                    data fileType, string
                    data fileExported = false
                    data fileZipped = false
                    data fileUploaded = false

                    ;-------------------------------------------------------------------
                    ;Extract the base file name from the file spec

                    begin
                        data tmpname, a80
                        data tmpext, a40
                        xcall parse(fileSpec,,,,,tmpname,tmpext)
                        fileName = %atrimtostring(tmpname)
                        fileExt = %atrimtostring(tmpext)
                        exportFile = fileName + ".TXT"
                        exportFileSpec = exportDirectory + exportFile
                        zipName = fileName + ".ZIP"
                        zipSpec = zipFileDirectory + zipName
                    end

                    ;-------------------------------------------------------------------
                    ;Determine the file type

                    begin
                        data ch = 0
                        try
                        begin
                            data result, int
                            open(ch,i,fileSpec)
                            xcall getfa(ch,"ORG",result)
                            using result select
                            (32),
                                fileType = "ISAM"
                            (15),
                                fileType = "RELATIVE"
                            (),
                            begin
                                ok = false
                                errorMessage = "Unsupported file type!"
                            end
                            endusing
                        end
                        catch (e, @Exception)
                        begin
                            ok = false
                            errorMessage = "Failed to open file " + fileSpec + ". Error was " + e.Message
                            ch = 0
                        end
                        finally
                        begin
                            if (ch)
                            begin
                                close ch
                            end
                        end
                        endtry
                    end

                    ;-------------------------------------------------------------------
                    ;Unload the file

                    if (ok)
                    begin
                        using fileType select
                        ("ISAM"),
                        begin
                            ;TODO: Export the ISAM file
                            nop
                        end
                        ("RELATIVE"),
                        begin
                            ;TODO: Export the relative file
                            nop
                        end
                        endusing
                    end

                    ;-------------------------------------------------------------------
                    ;Verify that the export file is present

                    if (ok && fileExported)
                    begin
                        data tmpch, int
                        try
                        begin
                            open(tmpch=0,i:s,exportFileSpec)
                        end
                        catch (e, @Exception)
                        begin
                            ok = false
                            errorMessage = "Failed to export file " + fileName
                            fileExported = false
                            clear tmpch
                        end
                        finally
                        begin
                            if (tmpch)
                            begin
                                close tmpch
                            end
                        end
                        endtry
                    end

                    ;-------------------------------------------------------------------
                    ;Compress the unloaded file

                    if (fileExported)
                    begin
                        ;TODO: zip the file
                        nop
                    end

                    ;-------------------------------------------------------------------
                    ;Delete the uncompressed file

                    if (fileExported)
                    begin
                        xcall delet(exportFileSpec)
                    end

                    ;-------------------------------------------------------------------
                    ;Upload the compressed file to an S3 bucket

                    if (fileZipped)
                    begin
                        ;TODO: Upload the ZIP file to S3
                        nop
                    end

                    ;-------------------------------------------------------------------
                    ;Report the outcome to the outbound Kafka topic
 
                    if (ok && fileUploaded) then
                    begin
                        ;Send "load file ready"
                        if (!%KafkaPublish(publisher,"UPLOADED",(a)fileSpec))
                        begin
                            ;TODO: What to do on a publish fail?
                            nop
                        end
                    end
                    else
                    begin
                        ;Send "export failed"
                        if (!%KafkaPublish(publisher,"UPLOADFAILED",(a)fileSpec))
                        begin
                            ;TODO: What to do on a publish fail?
                            nop
                        end
                    end

                    ;-------------------------------------------------------------------
                    ;Delete the compressed file

                    if (fileZipped)
                    begin
                        try
                        begin
                            xcall delet(zipSpec)
                        end
                        catch (e, @Exception)
                        begin
                            nop
                        end
                        endtry
                    end
                end

                (),
                begin
                    ;Some message with a key we don't recognize; ignore it
                    nextloop
                end
                endusing
            end
            else
            begin
                ;TODO:KafkaReceive returned an error. Decide what needs to be done.
                nop
            end
        end
    end

    ;Disconnect the consumer
    xcall KafkaDisconnectConsumer(consumer)

    ;Disconnect the publisher
    xcall KafkaDisconnectPublisher(publisher)

    stop

endmain